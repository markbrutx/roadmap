let habrUrl = 'https://habr.com/ru/articles/486820/#';

let jsQuestionsTasks = [
  {text: 'В чем разница между null и undefined?', url: `${habrUrl}1`},
  {text: 'Для чего используется оператор "&&"?', url: `${habrUrl}2`},
  {text: 'Для чего используется оператор "||"?', url: `${habrUrl}3`},
  {text: 'Является ли использование унарного плюса (оператор "+") самым быстрым способом преобразования строки в число?', url: `${habrUrl}4`},
  {text: 'Что такое DOM?', url: `${habrUrl}5`},
  {text: 'Что такое распространение события (Event Propogation)?', url: `${habrUrl}6`},
  {text: 'Что такое всплытие события (Event Bubbling)?', url: `${habrUrl}7`},
  {text: 'Что такое погружение события (Event Capturing)?', url: `${habrUrl}8`},
  {text: 'В чем разница между методами event.preventDefault() и event.stopPropagation()?', url: `${habrUrl}9`},
  {text: 'Как узнать об использовании метода event.preventDefault()?', url: `${habrUrl}10`},
  {text: 'Почему obj.someprop.x приводит к ошибке?', url: `${habrUrl}11`},
  {text: 'Что такое цель события или целевой элемент (event.target)?', url: `${habrUrl}12`},
  {text: 'Что такое текущая цель события (event.currentTarget)?', url: `${habrUrl}13`},
  {text: 'В чем разница между операторами "==" и "==="?', url: `${habrUrl}14`},
  {text: 'Почему результатом сравнения двух похожих объектов является false?', url: `${habrUrl}15`},
  {text: 'Для чего используется оператор "!!"?', url: `${habrUrl}16`},
  {text: 'Как записать несколько выражений в одну строку?', url: `${habrUrl}17`},
  {text: 'Что такое поднятие (Hoisting)?', url: `${habrUrl}18`},
  {text: 'Что такое область видимости (Scope)?', url: `${habrUrl}19`},
  {text: 'Что такое замыкание (Closures)?', url: `${habrUrl}20`},
  {text: 'Какие значения в JS являются ложными?', url: `${habrUrl}21`},
  {text: 'Как проверить, является ли значение ложным?', url: `${habrUrl}22`},
  {text: 'Для чего используется директива «use strict»?', url: `${habrUrl}23`},
  {text: 'Какое значение имеет this?', url: `${habrUrl}24`},
  {text: 'Что такое прототип объекта?', url: `${habrUrl}25`},
  {text: 'Что такое IIFE?', url: `${habrUrl}26`},
  {text: 'Для чего используется метод Function.prototype.apply?', url: `${habrUrl}27`},
  {text: 'Для чего используется метод Function.prototype.call?', url: `${habrUrl}28`},
  {text: 'В чем разница между методами call и apply?', url: `${habrUrl}29`},
  {text: 'Для чего используется метод Function.prototype.bind?', url: `${habrUrl}30`},
  {text: 'Что такое функциональное программирование и какие особенности JS позволяют говорить о нем как о функциональном языке программирования?', url: `${habrUrl}31`},
  {text: 'Что такое функции высшего порядка (Higher Order Functions)?', url: `${habrUrl}32`},
  {text: 'Почему функции в JS называют объектами первого класса (First-class Objects)?', url: `${habrUrl}33`},
  {text: 'Как бы Вы реализовали метод Array.prototype.map?', url: `${habrUrl}34`},
  {text: 'Как бы Вы реализовали метод Array.prototype.filter?', url: `${habrUrl}35`},
  {text: 'Как бы Вы реализовали метод Array.prototype.reduce?', url: `${habrUrl}36`},
  {text: 'Что такое объект arguments?', url: `${habrUrl}37`},
  {text: 'Как создать объект, не имеющий прототипа?', url: `${habrUrl}38`},
  {text: 'Почему в представленном коде переменная b становится глобальной при вызове функции?', url: `${habrUrl}39`},
  {text: 'Что такое ECMAScript?', url: `${habrUrl}40`},
  {text: 'Что нового привнес в JS стандарт ES6 или ECMAScript2015?', url: `${habrUrl}41`},
  {text: 'В чем разница между ключевыми словами «var», «let» и «const»?', url: `${habrUrl}42`},
  {text: 'Что такое стрелочные функции (Arrow Functions)?', url: `${habrUrl}43`},
  {text: 'Что такое классы (Classes)?', url: `${habrUrl}44`},
  {text: 'Что такое шаблонные литералы (Template Literals)?', url: `${habrUrl}45`},
  {text: 'Что такое деструктуризация объекта (Object Destructuring)?', url: `${habrUrl}`},
  {text: 'Что такое модули (Modules)?', url: `${habrUrl}47`},
  {text: 'Что такое объект Set?', url: `${habrUrl}48`},
  {text: 'Что такое функция обратного вызова (Callback Function)?', url: `${habrUrl}49`},
  {text: 'Что такое промисы (Promises)?', url: `${habrUrl}50`},
  {text: 'Что такое async/await?', url: `${habrUrl}51`},
  {text: 'В чем разница между spread-оператором и rest-оператором?', url: `${habrUrl}52`},
  {text: 'Что такое параметры по умолчанию (Default Parameters)?', url: `${habrUrl}53`},
  {text: 'Что такое объектная обертка (Wrapper Objects)?', url: `${habrUrl}54`},
  {text: 'В чем разница между явным и неявным преобразованием или приведением к типу (Implicit and Explicit Coercion)?', url: `${habrUrl}55`},
  {text: 'Что такое NaN? Как проверить, является ли значение NaN?', url: `${habrUrl}56`},
  {text: 'Как проверить, является ли значение массивом?', url: `${habrUrl}57`},
  {text: 'Как проверить, что число является четным, без использования деления по модулю или деления с остатком (оператора "%")?', url: `${habrUrl}58`},
  {text: 'Как определить наличие свойства в объекте?', url: `${habrUrl}59`},
  {text: 'Что такое AJAX?', url: `${habrUrl}60`},
  {text: 'Как в JS создать объект?', url: `${habrUrl}61`},
  {text: 'В чем разница между методами Object.freeze и Object.seal?', url: `${habrUrl}62`},
  {text: 'В чем разница между оператором «in» и методом hasOwnProperty?', url: `${habrUrl}63`},
  {text: 'Какие приемы работы с асинхронным кодом в JS Вы знаете?', url: `${habrUrl}64`},
  {text: 'В чем разница между обычной функцией и функциональным выражением?', url: `${habrUrl}65`},
  {text: 'Как в JS вызвать функцию?', url: `${habrUrl}66`},
  {text: 'Что такое запоминание или мемоизация (Memoization)?', url: `${habrUrl}67`},
  {text: 'Как бы Вы реализовали вспомогательную функцию запоминания?', url: `${habrUrl}68`},
  {text: 'Почему typeof null возвращает object? Как проверить, является ли значение null?', url: `${habrUrl}69`},
  {text: 'Для чего используется ключевое слово «new»?', url: `${habrUrl}70`}
]
